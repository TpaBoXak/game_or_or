"""add role table and role_id in user

Revision ID: 48dc212be5df
Revises: 8aa6e92791eb
Create Date: 2024-08-17 13:23:41.520319

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "48dc212be5df"
down_revision: Union[str, None] = "8aa6e92791eb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_roles")),
    )
    op.add_column(
        "users",
        sa.Column(
            "role_id",
            sa.Integer(),
            server_default=sa.text("0"),
            nullable=False,
        ),
    )
    op.drop_constraint("users_tg_id_key", "users", type_="unique")
    op.create_unique_constraint(op.f("uq_users_tg_id"), "users", ["tg_id"])
    op.create_foreign_key(
        op.f("fk_users_role_id_roles"), "users", "roles", ["role_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_users_role_id_roles"), "users", type_="foreignkey"
    )
    op.drop_constraint(op.f("uq_users_tg_id"), "users", type_="unique")
    op.create_unique_constraint("users_tg_id_key", "users", ["tg_id"])
    op.drop_column("users", "role_id")
    op.drop_table("roles")
    # ### end Alembic commands ###
